<snippet>
  <content>
<![CDATA[
/****************************************************************************
    BOB THE BUILDER...
******************************************************************************/
#include <bits/stdc++.h>
using namespace std;
#define int long long
#define mp make_pair
#define endl "\n"
#define rep(i,n) for(int i=0;i<n;i++)
#define pi pair<int,int>
#define vi vector<int>
#define all(x) x.begin(),x.end()
#define ff first
#define ss second
const long long mod = 1e9 + 7;


/* --------------------------DEBUGGING-----------------------*/
#ifndef DEBUG
#define debug(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1) {
  cout << name << " : " << arg1 << endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args) {
  const char* comma = strchr(names + 1, ','); cout.write(names, comma - names) << " : " << arg1 << " | "; __f(comma + 1, args...);
}
#endif
/*------------------------------------------------------------*/

void solve()
{

}

int32_t main()
{
  ios::sync_with_stdio(false);
  cin.tie(0);

  int t = 1;
  cin >> t;
  while (t--)
  {
    solve();
  }

  return 0;
}

]]>

</content>
  <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
  <tabTrigger>code</tabTrigger>
  <!-- Optional: Set a scope to limit where the snippet will trigger -->
  <!-- <scope>source.python</scope> -->
</snippet>
